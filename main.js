/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// main.ts
var main_exports = {};
__export(main_exports, {
  default: () => ZenMode
});
module.exports = __toCommonJS(main_exports);
var import_obsidian = require("obsidian");
var ZenMode = class extends import_obsidian.Plugin {
  async onload() {
    var HasTypedInEditor;
    this.registerEvent(this.app.workspace.on("editor-change", () => {
      HasTypedInEditor = true;
      if (HasTypedInEditor == true) {
        hideUI();
      }
    }));
    document.onmousemove = function() {
      HasTypedInEditor = false;
      if (HasTypedInEditor == false) {
        unhideUI();
      }
    };
  }
  async onunload() {
  }
};
function hideUI() {
  document.body.classList.toggle("unhide-all", false);
  document.body.classList.toggle("hider-all", true);
}
function unhideUI() {
  document.body.classList.toggle("hider-all", false);
  document.body.classList.toggle("unhide-all", true);
}
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibWFpbi50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiaW1wb3J0IHsgUGx1Z2luIH0gZnJvbSBcIm9ic2lkaWFuXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBaZW5Nb2RlIGV4dGVuZHMgUGx1Z2luIHtcclxuXHR1cGRhdGVTdHlsZTogKCkgPT4gdm9pZDtcclxuXHRvbm1vdXNlbW92ZTogKCkgPT4gdm9pZDtcclxuXHJcblx0YXN5bmMgb25sb2FkKCkge1xyXG5cdHZhciBIYXNUeXBlZEluRWRpdG9yOmJvb2xlYW47XHJcblxyXG5cdHRoaXMucmVnaXN0ZXJFdmVudCh0aGlzLmFwcC53b3Jrc3BhY2Uub24oJ2VkaXRvci1jaGFuZ2UnLCAoKSA9PiB7XHJcblx0XHRIYXNUeXBlZEluRWRpdG9yID0gdHJ1ZTtcclxuXHRcdGlmIChIYXNUeXBlZEluRWRpdG9yID09IHRydWUpXHJcblx0XHR7XHJcblx0XHRcdGhpZGVVSSgpO1xyXG5cdFx0fVxyXG4gICAgfSkpO1xyXG5cclxuXHRkb2N1bWVudC5vbm1vdXNlbW92ZSA9IGZ1bmN0aW9uKCl7XHJcblx0XHRIYXNUeXBlZEluRWRpdG9yID0gZmFsc2U7XHJcblx0XHRpZiAoSGFzVHlwZWRJbkVkaXRvciA9PSBmYWxzZSlcclxuXHRcdHtcclxuXHRcdCAgXHR1bmhpZGVVSSgpO1xyXG5cdFx0fVxyXG5cdH1cclxuICB9XHJcbiAgYXN5bmMgb251bmxvYWQoKSB7XHJcbiAgfVxyXG59XHJcbmZ1bmN0aW9uIGRlbGF5KHRpbWU6YW55KSB7XHJcblx0cmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCB0aW1lKSk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBoaWRlVUkoKSB7XHJcblx0ZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QudG9nZ2xlKCd1bmhpZGUtYWxsJywgZmFsc2UpXHJcblx0ZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QudG9nZ2xlKCdoaWRlci1hbGwnLCB0cnVlKVxyXG4gIH1cclxuIFxyXG4gIGZ1bmN0aW9uIHVuaGlkZVVJKCkge1xyXG5cdGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LnRvZ2dsZSgnaGlkZXItYWxsJywgZmFsc2UpXHJcblx0ZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QudG9nZ2xlKCd1bmhpZGUtYWxsJywgdHJ1ZSlcclxuICB9XHJcbiAiXSwKICAibWFwcGluZ3MiOiAiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsc0JBQXVCO0FBRXZCLElBQXFCLFVBQXJCLGNBQXFDLHVCQUFPO0FBQUEsRUFJM0MsTUFBTSxTQUFTO0FBQ2YsUUFBSTtBQUVKLFNBQUssY0FBYyxLQUFLLElBQUksVUFBVSxHQUFHLGlCQUFpQixNQUFNO0FBQy9ELHlCQUFtQjtBQUNuQixVQUFJLG9CQUFvQixNQUN4QjtBQUNDLGVBQU87QUFBQSxNQUNSO0FBQUEsSUFDRSxDQUFDLENBQUM7QUFFTCxhQUFTLGNBQWMsV0FBVTtBQUNoQyx5QkFBbUI7QUFDbkIsVUFBSSxvQkFBb0IsT0FDeEI7QUFDRyxpQkFBUztBQUFBLE1BQ1o7QUFBQSxJQUNEO0FBQUEsRUFDQztBQUFBLEVBQ0EsTUFBTSxXQUFXO0FBQUEsRUFDakI7QUFDRjtBQUtFLFNBQVMsU0FBUztBQUNuQixXQUFTLEtBQUssVUFBVSxPQUFPLGNBQWMsS0FBSztBQUNsRCxXQUFTLEtBQUssVUFBVSxPQUFPLGFBQWEsSUFBSTtBQUMvQztBQUVBLFNBQVMsV0FBVztBQUNyQixXQUFTLEtBQUssVUFBVSxPQUFPLGFBQWEsS0FBSztBQUNqRCxXQUFTLEtBQUssVUFBVSxPQUFPLGNBQWMsSUFBSTtBQUNoRDsiLAogICJuYW1lcyI6IFtdCn0K
